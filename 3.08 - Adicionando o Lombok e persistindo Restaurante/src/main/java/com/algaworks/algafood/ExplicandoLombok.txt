O Lombok Ã© uma biblioteca do Java que ajuda a reduzir o cÃ³digo boilerplate (aquele cÃ³digo repetitivo e chato de escrever, como getters, setters, equals, hashCode, toString, construtores etc.).

ğŸ‘‰ Ele funciona usando anotaÃ§Ãµes que, em tempo de compilaÃ§Ã£o, geram esse cÃ³digo automaticamente, sem vocÃª precisar escrever tudo manualmente.

Exemplos comuns:

@Getter e @Setter â†’ gera automaticamente os mÃ©todos getters e setters.

@Data â†’ gera getters, setters, equals, hashCode, toString e atÃ© um construtor para os atributos obrigatÃ³rios.

@NoArgsConstructor, @AllArgsConstructor â†’ gera construtores sem argumentos e com todos os argumentos.

@Builder â†’ cria o builder pattern para facilitar a criaÃ§Ã£o de objetos.

@Value â†’ cria objetos imutÃ¡veis (tudo final e sÃ³ getters).

@Slf4j â†’ cria um logger pronto para uso (sem precisar declarar manualmente).

Vantagens:

Menos cÃ³digo repetitivo â†’ classes mais limpas.

Facilita manutenÃ§Ã£o.

Foca mais na lÃ³gica do domÃ­nio, menos em "cÃ³digo cerimonial".

Cuidados:

Leitura do cÃ³digo: quem nÃ£o conhece Lombok pode estranhar, porque abre a classe e nÃ£o vÃª getters/setters escritos.

DependÃªncia: vocÃª fica atrelado Ã  biblioteca.

Ferramentas: IDEs modernas (Eclipse, IntelliJ, VS Code) jÃ¡ entendem Lombok, mas Ã s vezes Ã© preciso instalar plugin.